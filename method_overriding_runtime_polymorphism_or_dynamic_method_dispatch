//figure java
class figure{
    protected double dim1;
    protected double dim2;
    public figure(double a,double b){
        dim1=a;
        dim2=b;
    }
    public double area()
    {
        System.out.println("Area for Figure is undefined.");
        return 0;
    }
}
class rectangle extends figure{
    public rectangle(double a,double b){
        super(a,b);
    }
    public double area(){
        System.out.println("Inside Area for Rectangle.");
        return dim1*dim2;
    }  
//override area for rectangle
}
class triangle extends figure{
    public triangle(double a,double b){
        super(a,b);
    }
    public double area(){
        System.out.println("Inside Area for triangle.");
        return (0.5*dim1*dim2);
    }
}
public class methodoverridingruntimepolymorphismdynamicmethoddispatch {
    public static void main(String args[]){
        figure f=new figure(10,0);
        rectangle r=new rectangle(20,32);
        triangle t=new triangle(10,30);
        System.out.println(f.area()+"");
        System.out.println(r.area()+" ");
        System.out.println(t.area());
        
    }   
}
